{"version":3,"file":"nuxt-img.4c1bd034.js","sources":["../../../../node_modules/@nuxt/image/dist/runtime/utils/meta.mjs","../../../../node_modules/@nuxt/image/dist/runtime/utils/index.mjs","../../../../node_modules/@nuxt/image/dist/runtime/image.mjs","../../../../node_modules/@nuxt/image/dist/runtime/providers/ipx.mjs","../../../../virtual:nuxt:/home/runner/work/maku85.github.io/maku85.github.io/.nuxt/image-options.mjs","../../../../node_modules/@nuxt/image/dist/runtime/composables.mjs","../../../../node_modules/@nuxt/image/dist/runtime/components/_base.mjs","../../../../node_modules/@nuxt/image/dist/runtime/components/nuxt-img.mjs"],"sourcesContent":["export async function imageMeta(_ctx, url) {\n  const meta = await _imageMeta(url).catch((err) => {\n    console.error(\"Failed to get image meta for \" + url, err + \"\");\n    return {\n      width: 0,\n      height: 0,\n      ratio: 0\n    };\n  });\n  return meta;\n}\nasync function _imageMeta(url) {\n  if (process.server) {\n    const imageMeta2 = await import(\"image-meta\").then((r) => r.imageMeta);\n    const data = await fetch(url).then((res) => res.buffer());\n    const metadata = imageMeta2(data);\n    if (!metadata) {\n      throw new Error(`No metadata could be extracted from the image \\`${url}\\`.`);\n    }\n    const { width, height } = metadata;\n    const meta = {\n      width,\n      height,\n      ratio: width && height ? width / height : void 0\n    };\n    return meta;\n  }\n  if (typeof Image === \"undefined\") {\n    throw new TypeError(\"Image not supported\");\n  }\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => {\n      const meta = {\n        width: img.width,\n        height: img.height,\n        ratio: img.width / img.height\n      };\n      resolve(meta);\n    };\n    img.onerror = (err) => reject(err);\n    img.src = url;\n  });\n}\n","export default function imageFetch(url) {\n  return fetch(cleanDoubleSlashes(url));\n}\nexport function getInt(x) {\n  if (typeof x === \"number\") {\n    return x;\n  }\n  if (typeof x === \"string\") {\n    return parseInt(x, 10);\n  }\n  return void 0;\n}\nexport function getFileExtension(url = \"\") {\n  const extension = url.split(/[?#]/).shift().split(\"/\").pop().split(\".\").pop();\n  return extension;\n}\nexport function cleanDoubleSlashes(path = \"\") {\n  return path.replace(/(https?:\\/\\/)|(\\/)+/g, \"$1$2\");\n}\nexport function createMapper(map) {\n  return (key) => {\n    return key ? map[key] || key : map.missingValue;\n  };\n}\nexport function createOperationsGenerator({ formatter, keyMap, joinWith = \"/\", valueMap } = {}) {\n  if (!formatter) {\n    formatter = (key, value) => `${key}=${value}`;\n  }\n  if (keyMap && typeof keyMap !== \"function\") {\n    keyMap = createMapper(keyMap);\n  }\n  const map = valueMap || {};\n  Object.keys(map).forEach((valueKey) => {\n    if (typeof map[valueKey] !== \"function\") {\n      map[valueKey] = createMapper(map[valueKey]);\n    }\n  });\n  return (modifiers = {}) => {\n    const operations = Object.entries(modifiers).filter(([_, value]) => typeof value !== \"undefined\").map(([key, value]) => {\n      const mapper = map[key];\n      if (typeof mapper === \"function\") {\n        value = mapper(modifiers[key]);\n      }\n      key = typeof keyMap === \"function\" ? keyMap(key) : key;\n      return formatter(key, value);\n    });\n    return operations.join(joinWith);\n  };\n}\nexport function renderAttributesToString(attributes = {}) {\n  return Object.entries(attributes).map(([key, value]) => value ? `${key}=\"${value}\"` : \"\").filter(Boolean).join(\" \");\n}\nexport function renderTag(tag, attrs, contents) {\n  const html = `<${tag} ${renderAttributesToString(attrs)}>`;\n  if (!contents) {\n    return html;\n  }\n  return html + contents + `</${tag}>`;\n}\nexport function generateAlt(src = \"\") {\n  return src.split(/[?#]/).shift().split(\"/\").pop().split(\".\").shift();\n}\nexport function parseSize(input = \"\") {\n  if (typeof input === \"number\") {\n    return input;\n  }\n  if (typeof input === \"string\") {\n    if (input.replace(\"px\", \"\").match(/^\\d+$/g)) {\n      return parseInt(input, 10);\n    }\n  }\n}\n","import { defu } from \"defu\";\nimport { hasProtocol, parseURL, joinURL, withLeadingSlash } from \"ufo\";\nimport { imageMeta } from \"./utils/meta.mjs\";\nimport { parseSize } from \"./utils/index.mjs\";\nimport { prerenderStaticImages } from \"./utils/prerender.mjs\";\nexport function createImage(globalOptions) {\n  const ctx = {\n    options: globalOptions\n  };\n  const getImage = (input, options = {}) => {\n    const image = resolveImage(ctx, input, options);\n    if (process.server && process.env.prerender) {\n      prerenderStaticImages(image.url);\n    }\n    return image;\n  };\n  const $img = (input, modifiers = {}, options = {}) => {\n    return getImage(input, {\n      ...options,\n      modifiers: defu(modifiers, options.modifiers || {})\n    }).url;\n  };\n  for (const presetName in globalOptions.presets) {\n    $img[presetName] = (source, modifiers, options) => $img(source, modifiers, { ...globalOptions.presets[presetName], ...options });\n  }\n  $img.options = globalOptions;\n  $img.getImage = getImage;\n  $img.getMeta = (input, options) => getMeta(ctx, input, options);\n  $img.getSizes = (input, options) => getSizes(ctx, input, options);\n  ctx.$img = $img;\n  return $img;\n}\nasync function getMeta(ctx, input, options) {\n  const image = resolveImage(ctx, input, { ...options });\n  if (typeof image.getMeta === \"function\") {\n    return await image.getMeta();\n  } else {\n    return await imageMeta(ctx, image.url);\n  }\n}\nfunction resolveImage(ctx, input, options) {\n  if (typeof input !== \"string\" || input === \"\") {\n    throw new TypeError(`input must be a string (received ${typeof input}: ${JSON.stringify(input)})`);\n  }\n  if (input.startsWith(\"data:\")) {\n    return {\n      url: input\n    };\n  }\n  const { provider, defaults } = getProvider(ctx, options.provider || ctx.options.provider);\n  const preset = getPreset(ctx, options.preset);\n  input = hasProtocol(input) ? input : withLeadingSlash(input);\n  if (!provider.supportsAlias) {\n    for (const base in ctx.options.alias) {\n      if (input.startsWith(base)) {\n        input = joinURL(ctx.options.alias[base], input.substr(base.length));\n      }\n    }\n  }\n  if (provider.validateDomains && hasProtocol(input)) {\n    const inputHost = parseURL(input).host;\n    if (!ctx.options.domains.find((d) => d === inputHost)) {\n      return {\n        url: input\n      };\n    }\n  }\n  const _options = defu(options, preset, defaults);\n  _options.modifiers = { ..._options.modifiers };\n  const expectedFormat = _options.modifiers.format;\n  if (_options.modifiers?.width) {\n    _options.modifiers.width = parseSize(_options.modifiers.width);\n  }\n  if (_options.modifiers?.height) {\n    _options.modifiers.height = parseSize(_options.modifiers.height);\n  }\n  const image = provider.getImage(input, _options, ctx);\n  image.format = image.format || expectedFormat || \"\";\n  return image;\n}\nfunction getProvider(ctx, name) {\n  const provider = ctx.options.providers[name];\n  if (!provider) {\n    throw new Error(\"Unknown provider: \" + name);\n  }\n  return provider;\n}\nfunction getPreset(ctx, name) {\n  if (!name) {\n    return {};\n  }\n  if (!ctx.options.presets[name]) {\n    throw new Error(\"Unknown preset: \" + name);\n  }\n  return ctx.options.presets[name];\n}\nfunction getSizes(ctx, input, opts) {\n  const width = parseSize(opts.modifiers?.width);\n  const height = parseSize(opts.modifiers?.height);\n  const hwRatio = width && height ? height / width : 0;\n  const variants = [];\n  const sizes = {};\n  if (typeof opts.sizes === \"string\") {\n    for (const entry of opts.sizes.split(/[\\s,]+/).filter((e) => e)) {\n      const s = entry.split(\":\");\n      if (s.length !== 2) {\n        continue;\n      }\n      sizes[s[0].trim()] = s[1].trim();\n    }\n  } else {\n    Object.assign(sizes, opts.sizes);\n  }\n  for (const key in sizes) {\n    const screenMaxWidth = ctx.options.screens && ctx.options.screens[key] || parseInt(key);\n    let size = String(sizes[key]);\n    const isFluid = size.endsWith(\"vw\");\n    if (!isFluid && /^\\d+$/.test(size)) {\n      size = size + \"px\";\n    }\n    if (!isFluid && !size.endsWith(\"px\")) {\n      continue;\n    }\n    let _cWidth = parseInt(size);\n    if (!screenMaxWidth || !_cWidth) {\n      continue;\n    }\n    if (isFluid) {\n      _cWidth = Math.round(_cWidth / 100 * screenMaxWidth);\n    }\n    const _cHeight = hwRatio ? Math.round(_cWidth * hwRatio) : height;\n    variants.push({\n      width: _cWidth,\n      size,\n      screenMaxWidth,\n      media: `(max-width: ${screenMaxWidth}px)`,\n      src: ctx.$img(input, { ...opts.modifiers, width: _cWidth, height: _cHeight }, opts)\n    });\n  }\n  variants.sort((v1, v2) => v1.screenMaxWidth - v2.screenMaxWidth);\n  const defaultVar = variants[variants.length - 1];\n  if (defaultVar) {\n    defaultVar.media = \"\";\n  }\n  return {\n    sizes: variants.map((v) => `${v.media ? v.media + \" \" : \"\"}${v.size}`).join(\", \"),\n    srcset: variants.map((v) => `${v.src} ${v.width}w`).join(\", \"),\n    src: defaultVar?.src\n  };\n}\n","import { joinURL, encodePath, encodeParam } from \"ufo\";\nimport { createOperationsGenerator } from \"#image\";\nconst operationsGenerator = createOperationsGenerator({\n  keyMap: {\n    format: \"f\",\n    fit: \"fit\",\n    width: \"w\",\n    height: \"h\",\n    resize: \"s\",\n    quality: \"q\",\n    background: \"b\"\n  },\n  joinWith: \"&\",\n  formatter: (key, val) => encodeParam(key) + \"_\" + encodeParam(val)\n});\nexport const getImage = (src, { modifiers = {}, baseURL } = {}, ctx) => {\n  if (modifiers.width && modifiers.height) {\n    modifiers.resize = `${modifiers.width}x${modifiers.height}`;\n    delete modifiers.width;\n    delete modifiers.height;\n  }\n  const params = operationsGenerator(modifiers) || \"_\";\n  if (!baseURL) {\n    baseURL = joinURL(ctx.options.nuxt.baseURL, \"/_ipx\");\n  }\n  return {\n    url: joinURL(baseURL, params, encodePath(src))\n  };\n};\nexport const validateDomains = true;\nexport const supportsAlias = true;\n","\nimport * as ipxRuntime$0tvwATtUbL from '/home/runner/work/maku85.github.io/maku85.github.io/node_modules/@nuxt/image/dist/runtime/providers/ipx'\n\nexport const imageOptions = {\n  \"screens\": {\n    \"xs\": 320,\n    \"sm\": 640,\n    \"md\": 768,\n    \"lg\": 1024,\n    \"xl\": 1280,\n    \"xxl\": 1536,\n    \"2xl\": 1536\n  },\n  \"presets\": {},\n  \"provider\": \"ipx\",\n  \"domains\": [],\n  \"alias\": {}\n}\n\nimageOptions.providers = {\n  ['ipx']: { provider: ipxRuntime$0tvwATtUbL, defaults: undefined }\n}\n        ","import { createImage } from \"./image.mjs\";\nimport { imageOptions } from \"#build/image-options\";\nimport { useNuxtApp, useRuntimeConfig } from \"#imports\";\nexport const useImage = () => {\n  const config = useRuntimeConfig();\n  const nuxtApp = useNuxtApp();\n  return nuxtApp.$img || nuxtApp._img || (nuxtApp._img = createImage({\n    ...imageOptions,\n    nuxt: {\n      baseURL: config.app.baseURL\n    }\n  }));\n};\n","import { computed } from \"vue\";\nimport { parseSize } from \"../utils/index.mjs\";\nexport const baseImageProps = {\n  // input source\n  src: { type: String, required: true },\n  // modifiers\n  format: { type: String, default: void 0 },\n  quality: { type: [Number, String], default: void 0 },\n  background: { type: String, default: void 0 },\n  fit: { type: String, default: void 0 },\n  modifiers: { type: Object, default: void 0 },\n  // options\n  preset: { type: String, default: void 0 },\n  provider: { type: String, default: void 0 },\n  sizes: { type: [Object, String], default: void 0 },\n  preload: { type: Boolean, default: void 0 },\n  // <img> attributes\n  width: { type: [String, Number], default: void 0 },\n  height: { type: [String, Number], default: void 0 },\n  alt: { type: String, default: void 0 },\n  referrerpolicy: { type: String, default: void 0 },\n  usemap: { type: String, default: void 0 },\n  longdesc: { type: String, default: void 0 },\n  ismap: { type: Boolean, default: void 0 },\n  loading: { type: String, default: void 0 },\n  crossorigin: {\n    type: [Boolean, String],\n    default: void 0,\n    validator: (val) => [\"anonymous\", \"use-credentials\", \"\", true, false].includes(val)\n  },\n  decoding: {\n    type: String,\n    default: void 0,\n    validator: (val) => [\"async\", \"auto\", \"sync\"].includes(val)\n  }\n};\nexport const useBaseImage = (props) => {\n  const options = computed(() => {\n    return {\n      provider: props.provider,\n      preset: props.preset\n    };\n  });\n  const attrs = computed(() => {\n    return {\n      width: parseSize(props.width),\n      height: parseSize(props.height),\n      alt: props.alt,\n      referrerpolicy: props.referrerpolicy,\n      usemap: props.usemap,\n      longdesc: props.longdesc,\n      ismap: props.ismap,\n      crossorigin: props.crossorigin === true ? \"anonymous\" : props.crossorigin || void 0,\n      loading: props.loading,\n      decoding: props.decoding\n    };\n  });\n  const modifiers = computed(() => {\n    return {\n      ...props.modifiers,\n      width: parseSize(props.width),\n      height: parseSize(props.height),\n      format: props.format,\n      quality: props.quality,\n      background: props.background,\n      fit: props.fit\n    };\n  });\n  return {\n    options,\n    attrs,\n    modifiers\n  };\n};\n","import { h, defineComponent, ref, computed, onMounted } from \"vue\";\nimport { useImage } from \"../composables.mjs\";\nimport { parseSize } from \"../utils/index.mjs\";\nimport { prerenderStaticImages } from \"../utils/prerender.mjs\";\nimport { baseImageProps, useBaseImage } from \"./_base.mjs\";\nimport { useHead, useNuxtApp } from \"#imports\";\nexport const imgProps = {\n  ...baseImageProps,\n  placeholder: { type: [Boolean, String, Number, Array], default: void 0 }\n};\nexport default defineComponent({\n  name: \"NuxtImg\",\n  props: imgProps,\n  emits: [\"load\", \"error\"],\n  setup: (props, ctx) => {\n    const $img = useImage();\n    const _base = useBaseImage(props);\n    const placeholderLoaded = ref(false);\n    const sizes = computed(() => $img.getSizes(props.src, {\n      ..._base.options.value,\n      sizes: props.sizes,\n      modifiers: {\n        ..._base.modifiers.value,\n        width: parseSize(props.width),\n        height: parseSize(props.height)\n      }\n    }));\n    const attrs = computed(() => {\n      const attrs2 = { ..._base.attrs.value, \"data-nuxt-img\": \"\" };\n      if (props.sizes) {\n        attrs2.sizes = sizes.value.sizes;\n        attrs2.srcset = sizes.value.srcset;\n      }\n      return attrs2;\n    });\n    const placeholder = computed(() => {\n      let placeholder2 = props.placeholder;\n      if (placeholder2 === \"\") {\n        placeholder2 = true;\n      }\n      if (!placeholder2 || placeholderLoaded.value) {\n        return false;\n      }\n      if (typeof placeholder2 === \"string\") {\n        return placeholder2;\n      }\n      const size = Array.isArray(placeholder2) ? placeholder2 : typeof placeholder2 === \"number\" ? [placeholder2, placeholder2] : [10, 10];\n      return $img(props.src, {\n        ..._base.modifiers.value,\n        width: size[0],\n        height: size[1],\n        quality: size[2] || 50\n      }, _base.options.value);\n    });\n    const mainSrc = computed(\n      () => props.sizes ? sizes.value.src : $img(props.src, _base.modifiers.value, _base.options.value)\n    );\n    const src = computed(() => placeholder.value ? placeholder.value : mainSrc.value);\n    if (props.preload) {\n      const isResponsive = Object.values(sizes.value).every((v) => v);\n      useHead({\n        link: [{\n          rel: \"preload\",\n          as: \"image\",\n          ...!isResponsive ? { href: src.value } : {\n            href: sizes.value.src,\n            imagesizes: sizes.value.sizes,\n            imagesrcset: sizes.value.srcset\n          }\n        }]\n      });\n    }\n    if (process.server && process.env.prerender) {\n      prerenderStaticImages(src.value, sizes.value.srcset);\n    }\n    const imgEl = ref();\n    const nuxtApp = useNuxtApp();\n    const initialLoad = nuxtApp.isHydrating;\n    onMounted(() => {\n      if (placeholder.value) {\n        const img = new Image();\n        img.src = mainSrc.value;\n        img.onload = (event) => {\n          if (imgEl.value) {\n            imgEl.value.src = mainSrc.value;\n          }\n          placeholderLoaded.value = true;\n          ctx.emit(\"load\", event);\n        };\n        return;\n      }\n      if (!imgEl.value) {\n        return;\n      }\n      if (imgEl.value.complete && initialLoad) {\n        if (imgEl.value.getAttribute(\"data-error\")) {\n          ctx.emit(\"error\", new Event(\"error\"));\n        } else {\n          ctx.emit(\"load\", new Event(\"load\"));\n        }\n      }\n      imgEl.value.onload = (event) => {\n        ctx.emit(\"load\", event);\n      };\n      imgEl.value.onerror = (event) => {\n        ctx.emit(\"error\", event);\n      };\n    });\n    return () => h(\"img\", {\n      ref: imgEl,\n      key: src.value,\n      src: src.value,\n      ...process.server ? { onerror: \"this.setAttribute('data-error', 1)\" } : {},\n      ...attrs.value,\n      ...ctx.attrs\n    });\n  }\n});\n"],"names":["imageMeta","_ctx","url","_imageMeta","err","resolve","reject","img","meta","createMapper","map","key","createOperationsGenerator","formatter","keyMap","joinWith","valueMap","value","valueKey","modifiers","_","mapper","parseSize","input","createImage","globalOptions","ctx","getImage","options","resolveImage","$img","defu","presetName","source","getMeta","getSizes","image","provider","defaults","getProvider","preset","getPreset","hasProtocol","withLeadingSlash","base","joinURL","inputHost","parseURL","d","_options","expectedFormat","_a","_b","name","opts","width","height","hwRatio","variants","sizes","entry","e","s","screenMaxWidth","size","isFluid","_cWidth","_cHeight","v1","v2","defaultVar","v","operationsGenerator","val","encodeParam","src","baseURL","params","encodePath","validateDomains","supportsAlias","imageOptions","ipxRuntime$0tvwATtUbL","useImage","config","useRuntimeConfig","nuxtApp","useNuxtApp","baseImageProps","useBaseImage","props","computed","attrs","imgProps","__nuxt_component_0","_base","placeholderLoaded","ref","attrs2","placeholder","placeholder2","mainSrc","isResponsive","useHead","imgEl","initialLoad","onMounted","event","h"],"mappings":"0IAAO,eAAeA,EAAUC,EAAMC,EAAK,CASzC,OARa,MAAMC,EAAWD,CAAG,EAAE,MAAOE,IACxC,QAAQ,MAAM,gCAAkCF,EAAKE,EAAM,EAAE,EACtD,CACL,MAAO,EACP,OAAQ,EACR,MAAO,CACb,EACG,CAEH,CACA,eAAeD,EAAWD,EAAK,CAgB7B,GAAI,OAAO,MAAU,IACnB,MAAM,IAAI,UAAU,qBAAqB,EAE3C,OAAO,IAAI,QAAQ,CAACG,EAASC,IAAW,CACtC,MAAMC,EAAM,IAAI,MAChBA,EAAI,OAAS,IAAM,CACjB,MAAMC,EAAO,CACX,MAAOD,EAAI,MACX,OAAQA,EAAI,OACZ,MAAOA,EAAI,MAAQA,EAAI,MAC/B,EACMF,EAAQG,CAAI,CAClB,EACID,EAAI,QAAWH,GAAQE,EAAOF,CAAG,EACjCG,EAAI,IAAML,CACd,CAAG,CACH,CCxBO,SAASO,EAAaC,EAAK,CAChC,OAAQC,GACCA,EAAMD,EAAIC,CAAG,GAAKA,EAAMD,EAAI,YAEvC,CACO,SAASE,EAA0B,CAAE,UAAAC,EAAW,OAAAC,EAAQ,SAAAC,EAAW,IAAK,SAAAC,CAAU,EAAG,GAAI,CACzFH,IACHA,EAAY,CAACF,EAAKM,IAAU,GAAGN,KAAOM,KAEpCH,GAAU,OAAOA,GAAW,aAC9BA,EAASL,EAAaK,CAAM,GAE9B,MAAMJ,EAAMM,GAAY,GACxB,cAAO,KAAKN,CAAG,EAAE,QAASQ,GAAa,CACjC,OAAOR,EAAIQ,CAAQ,GAAM,aAC3BR,EAAIQ,CAAQ,EAAIT,EAAaC,EAAIQ,CAAQ,CAAC,EAEhD,CAAG,EACM,CAACC,EAAY,KACC,OAAO,QAAQA,CAAS,EAAE,OAAO,CAAC,CAACC,EAAGH,CAAK,IAAM,OAAOA,EAAU,GAAW,EAAE,IAAI,CAAC,CAACN,EAAKM,CAAK,IAAM,CACtH,MAAMI,EAASX,EAAIC,CAAG,EACtB,OAAI,OAAOU,GAAW,aACpBJ,EAAQI,EAAOF,EAAUR,CAAG,CAAC,GAE/BA,EAAM,OAAOG,GAAW,WAAaA,EAAOH,CAAG,EAAIA,EAC5CE,EAAUF,EAAKM,CAAK,CACjC,CAAK,EACiB,KAAKF,CAAQ,CAEnC,CAcO,SAASO,EAAUC,EAAQ,GAAI,CACpC,GAAI,OAAOA,GAAU,SACnB,OAAOA,EAET,GAAI,OAAOA,GAAU,UACfA,EAAM,QAAQ,KAAM,EAAE,EAAE,MAAM,QAAQ,EACxC,OAAO,SAASA,EAAO,EAAE,CAG/B,CClEO,SAASC,EAAYC,EAAe,CACzC,MAAMC,EAAM,CACV,QAASD,CACb,EACQE,EAAW,CAACJ,EAAOK,EAAU,CAAA,IACnBC,EAAaH,EAAKH,EAAOK,CAAO,EAM1CE,EAAO,CAACP,EAAOJ,EAAY,CAAE,EAAES,EAAU,KACtCD,EAASJ,EAAO,CACrB,GAAGK,EACH,UAAWG,EAAKZ,EAAWS,EAAQ,WAAa,CAAA,CAAE,CACnD,CAAA,EAAE,IAEL,UAAWI,KAAcP,EAAc,QACrCK,EAAKE,CAAU,EAAI,CAACC,EAAQd,EAAWS,IAAYE,EAAKG,EAAQd,EAAW,CAAE,GAAGM,EAAc,QAAQO,CAAU,EAAG,GAAGJ,CAAO,CAAE,EAEjI,OAAAE,EAAK,QAAUL,EACfK,EAAK,SAAWH,EAChBG,EAAK,QAAU,CAACP,EAAOK,IAAYM,EAAQR,EAAKH,EAAOK,CAAO,EAC9DE,EAAK,SAAW,CAACP,EAAOK,IAAYO,EAAST,EAAKH,EAAOK,CAAO,EAChEF,EAAI,KAAOI,EACJA,CACT,CACA,eAAeI,EAAQR,EAAKH,EAAOK,EAAS,CAC1C,MAAMQ,EAAQP,EAAaH,EAAKH,EAAO,CAAE,GAAGK,CAAO,CAAE,EACrD,OAAI,OAAOQ,EAAM,SAAY,WACpB,MAAMA,EAAM,UAEZ,MAAMpC,EAAU0B,EAAKU,EAAM,GAAG,CAEzC,CACA,SAASP,EAAaH,EAAKH,EAAOK,EAAS,SACzC,GAAI,OAAOL,GAAU,UAAYA,IAAU,GACzC,MAAM,IAAI,UAAU,oCAAoC,OAAOA,MAAU,KAAK,UAAUA,CAAK,IAAI,EAEnG,GAAIA,EAAM,WAAW,OAAO,EAC1B,MAAO,CACL,IAAKA,CACX,EAEE,KAAM,CAAE,SAAAc,EAAU,SAAAC,CAAU,EAAGC,EAAYb,EAAKE,EAAQ,UAAYF,EAAI,QAAQ,QAAQ,EAClFc,EAASC,EAAUf,EAAKE,EAAQ,MAAM,EAE5C,GADAL,EAAQmB,EAAYnB,CAAK,EAAIA,EAAQoB,EAAiBpB,CAAK,EACvD,CAACc,EAAS,cACZ,UAAWO,KAAQlB,EAAI,QAAQ,MACzBH,EAAM,WAAWqB,CAAI,IACvBrB,EAAQsB,EAAQnB,EAAI,QAAQ,MAAMkB,CAAI,EAAGrB,EAAM,OAAOqB,EAAK,MAAM,CAAC,GAIxE,GAAIP,EAAS,iBAAmBK,EAAYnB,CAAK,EAAG,CAClD,MAAMuB,EAAYC,EAASxB,CAAK,EAAE,KAClC,GAAI,CAACG,EAAI,QAAQ,QAAQ,KAAMsB,GAAMA,IAAMF,CAAS,EAClD,MAAO,CACL,IAAKvB,CACb,EAGE,MAAM0B,EAAWlB,EAAKH,EAASY,EAAQF,CAAQ,EAC/CW,EAAS,UAAY,CAAE,GAAGA,EAAS,SAAS,EAC5C,MAAMC,EAAiBD,EAAS,UAAU,QACtCE,EAAAF,EAAS,YAAT,MAAAE,EAAoB,QACtBF,EAAS,UAAU,MAAQ3B,EAAU2B,EAAS,UAAU,KAAK,IAE3DG,EAAAH,EAAS,YAAT,MAAAG,EAAoB,SACtBH,EAAS,UAAU,OAAS3B,EAAU2B,EAAS,UAAU,MAAM,GAEjE,MAAMb,EAAQC,EAAS,SAASd,EAAO0B,EAAUvB,CAAG,EACpD,OAAAU,EAAM,OAASA,EAAM,QAAUc,GAAkB,GAC1Cd,CACT,CACA,SAASG,EAAYb,EAAK2B,EAAM,CAC9B,MAAMhB,EAAWX,EAAI,QAAQ,UAAU2B,CAAI,EAC3C,GAAI,CAAChB,EACH,MAAM,IAAI,MAAM,qBAAuBgB,CAAI,EAE7C,OAAOhB,CACT,CACA,SAASI,EAAUf,EAAK2B,EAAM,CAC5B,GAAI,CAACA,EACH,MAAO,GAET,GAAI,CAAC3B,EAAI,QAAQ,QAAQ2B,CAAI,EAC3B,MAAM,IAAI,MAAM,mBAAqBA,CAAI,EAE3C,OAAO3B,EAAI,QAAQ,QAAQ2B,CAAI,CACjC,CACA,SAASlB,EAAST,EAAKH,EAAO+B,EAAM,SAClC,MAAMC,EAAQjC,GAAU6B,EAAAG,EAAK,YAAL,YAAAH,EAAgB,KAAK,EACvCK,EAASlC,GAAU8B,EAAAE,EAAK,YAAL,YAAAF,EAAgB,MAAM,EACzCK,EAAUF,GAASC,EAASA,EAASD,EAAQ,EAC7CG,EAAW,CAAA,EACXC,EAAQ,CAAA,EACd,GAAI,OAAOL,EAAK,OAAU,SACxB,UAAWM,KAASN,EAAK,MAAM,MAAM,QAAQ,EAAE,OAAQO,GAAMA,CAAC,EAAG,CAC/D,MAAMC,EAAIF,EAAM,MAAM,GAAG,EACrBE,EAAE,SAAW,IAGjBH,EAAMG,EAAE,CAAC,EAAE,KAAI,CAAE,EAAIA,EAAE,CAAC,EAAE,aAG5B,OAAO,OAAOH,EAAOL,EAAK,KAAK,EAEjC,UAAW3C,KAAOgD,EAAO,CACvB,MAAMI,EAAiBrC,EAAI,QAAQ,SAAWA,EAAI,QAAQ,QAAQf,CAAG,GAAK,SAASA,CAAG,EACtF,IAAIqD,EAAO,OAAOL,EAAMhD,CAAG,CAAC,EAC5B,MAAMsD,EAAUD,EAAK,SAAS,IAAI,EAIlC,GAHI,CAACC,GAAW,QAAQ,KAAKD,CAAI,IAC/BA,EAAOA,EAAO,MAEZ,CAACC,GAAW,CAACD,EAAK,SAAS,IAAI,EACjC,SAEF,IAAIE,EAAU,SAASF,CAAI,EAC3B,GAAI,CAACD,GAAkB,CAACG,EACtB,SAEED,IACFC,EAAU,KAAK,MAAMA,EAAU,IAAMH,CAAc,GAErD,MAAMI,EAAWV,EAAU,KAAK,MAAMS,EAAUT,CAAO,EAAID,EAC3DE,EAAS,KAAK,CACZ,MAAOQ,EACP,KAAAF,EACA,eAAAD,EACA,MAAO,eAAeA,OACtB,IAAKrC,EAAI,KAAKH,EAAO,CAAE,GAAG+B,EAAK,UAAW,MAAOY,EAAS,OAAQC,CAAQ,EAAIb,CAAI,CACxF,CAAK,EAEHI,EAAS,KAAK,CAACU,EAAIC,IAAOD,EAAG,eAAiBC,EAAG,cAAc,EAC/D,MAAMC,EAAaZ,EAASA,EAAS,OAAS,CAAC,EAC/C,OAAIY,IACFA,EAAW,MAAQ,IAEd,CACL,MAAOZ,EAAS,IAAKa,GAAM,GAAGA,EAAE,MAAQA,EAAE,MAAQ,IAAM,KAAKA,EAAE,MAAM,EAAE,KAAK,IAAI,EAChF,OAAQb,EAAS,IAAKa,GAAM,GAAGA,EAAE,OAAOA,EAAE,QAAQ,EAAE,KAAK,IAAI,EAC7D,IAAKD,GAAA,YAAAA,EAAY,GACrB,CACA,CCnJA,MAAME,EAAsB5D,EAA0B,CACpD,OAAQ,CACN,OAAQ,IACR,IAAK,MACL,MAAO,IACP,OAAQ,IACR,OAAQ,IACR,QAAS,IACT,WAAY,GACb,EACD,SAAU,IACV,UAAW,CAACD,EAAK8D,IAAQC,EAAY/D,CAAG,EAAI,IAAM+D,EAAYD,CAAG,CACnE,CAAC,EACY9C,EAAW,CAACgD,EAAK,CAAE,UAAAxD,EAAY,CAAE,EAAE,QAAAyD,CAAS,EAAG,CAAE,EAAElD,IAAQ,CAClEP,EAAU,OAASA,EAAU,SAC/BA,EAAU,OAAS,GAAGA,EAAU,SAASA,EAAU,SACnD,OAAOA,EAAU,MACjB,OAAOA,EAAU,QAEnB,MAAM0D,EAASL,EAAoBrD,CAAS,GAAK,IACjD,OAAKyD,IACHA,EAAU/B,EAAQnB,EAAI,QAAQ,KAAK,QAAS,OAAO,GAE9C,CACL,IAAKmB,EAAQ+B,EAASC,EAAQC,EAAWH,CAAG,CAAC,CACjD,CACA,EACaI,EAAkB,GAClBC,EAAgB,6IC3BhBC,EAAe,CAC1B,QAAW,CACT,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,KACN,GAAM,KACN,IAAO,KACP,MAAO,IACR,EACD,QAAW,CAAE,EACb,SAAY,MACZ,QAAW,CAAE,EACb,MAAS,CAAE,CACb,EAEAA,EAAa,UAAY,CACtB,IAAQ,CAAE,SAAUC,EAAuB,SAAU,MAAW,CACnE,EClBO,MAAMC,EAAW,IAAM,CAC5B,MAAMC,EAASC,IACTC,EAAUC,IAChB,OAAOD,EAAQ,MAAQA,EAAQ,OAASA,EAAQ,KAAO9D,EAAY,CACjE,GAAGyD,EACH,KAAM,CACJ,QAASG,EAAO,IAAI,OACrB,CACF,CAAA,EACH,ECVaI,EAAiB,CAE5B,IAAK,CAAE,KAAM,OAAQ,SAAU,EAAM,EAErC,OAAQ,CAAE,KAAM,OAAQ,QAAS,MAAQ,EACzC,QAAS,CAAE,KAAM,CAAC,OAAQ,MAAM,EAAG,QAAS,MAAQ,EACpD,WAAY,CAAE,KAAM,OAAQ,QAAS,MAAQ,EAC7C,IAAK,CAAE,KAAM,OAAQ,QAAS,MAAQ,EACtC,UAAW,CAAE,KAAM,OAAQ,QAAS,MAAQ,EAE5C,OAAQ,CAAE,KAAM,OAAQ,QAAS,MAAQ,EACzC,SAAU,CAAE,KAAM,OAAQ,QAAS,MAAQ,EAC3C,MAAO,CAAE,KAAM,CAAC,OAAQ,MAAM,EAAG,QAAS,MAAQ,EAClD,QAAS,CAAE,KAAM,QAAS,QAAS,MAAQ,EAE3C,MAAO,CAAE,KAAM,CAAC,OAAQ,MAAM,EAAG,QAAS,MAAQ,EAClD,OAAQ,CAAE,KAAM,CAAC,OAAQ,MAAM,EAAG,QAAS,MAAQ,EACnD,IAAK,CAAE,KAAM,OAAQ,QAAS,MAAQ,EACtC,eAAgB,CAAE,KAAM,OAAQ,QAAS,MAAQ,EACjD,OAAQ,CAAE,KAAM,OAAQ,QAAS,MAAQ,EACzC,SAAU,CAAE,KAAM,OAAQ,QAAS,MAAQ,EAC3C,MAAO,CAAE,KAAM,QAAS,QAAS,MAAQ,EACzC,QAAS,CAAE,KAAM,OAAQ,QAAS,MAAQ,EAC1C,YAAa,CACX,KAAM,CAAC,QAAS,MAAM,EACtB,QAAS,OACT,UAAYf,GAAQ,CAAC,YAAa,kBAAmB,GAAI,GAAM,EAAK,EAAE,SAASA,CAAG,CACnF,EACD,SAAU,CACR,KAAM,OACN,QAAS,OACT,UAAYA,GAAQ,CAAC,QAAS,OAAQ,MAAM,EAAE,SAASA,CAAG,CAC3D,CACH,EACagB,EAAgBC,GAAU,CACrC,MAAM9D,EAAU+D,EAAS,KAChB,CACL,SAAUD,EAAM,SAChB,OAAQA,EAAM,MACpB,EACG,EACKE,EAAQD,EAAS,KACd,CACL,MAAOrE,EAAUoE,EAAM,KAAK,EAC5B,OAAQpE,EAAUoE,EAAM,MAAM,EAC9B,IAAKA,EAAM,IACX,eAAgBA,EAAM,eACtB,OAAQA,EAAM,OACd,SAAUA,EAAM,SAChB,MAAOA,EAAM,MACb,YAAaA,EAAM,cAAgB,GAAO,YAAcA,EAAM,aAAe,OAC7E,QAASA,EAAM,QACf,SAAUA,EAAM,QACtB,EACG,EACKvE,EAAYwE,EAAS,KAClB,CACL,GAAGD,EAAM,UACT,MAAOpE,EAAUoE,EAAM,KAAK,EAC5B,OAAQpE,EAAUoE,EAAM,MAAM,EAC9B,OAAQA,EAAM,OACd,QAASA,EAAM,QACf,WAAYA,EAAM,WAClB,IAAKA,EAAM,GACjB,EACG,EACD,MAAO,CACL,QAAA9D,EACA,MAAAgE,EACA,UAAAzE,CACJ,CACA,ECnEa0E,EAAW,CACtB,GAAGL,EACH,YAAa,CAAE,KAAM,CAAC,QAAS,OAAQ,OAAQ,KAAK,EAAG,QAAS,MAAQ,CAC1E,EACeM,KAAgB,CAC7B,KAAM,UACN,MAAOD,EACP,MAAO,CAAC,OAAQ,OAAO,EACvB,MAAO,CAACH,EAAOhE,IAAQ,CACrB,MAAMI,EAAOqD,IACPY,EAAQN,EAAaC,CAAK,EAC1BM,EAAoBC,EAAI,EAAK,EAC7BtC,EAAQgC,EAAS,IAAM7D,EAAK,SAAS4D,EAAM,IAAK,CACpD,GAAGK,EAAM,QAAQ,MACjB,MAAOL,EAAM,MACb,UAAW,CACT,GAAGK,EAAM,UAAU,MACnB,MAAOzE,EAAUoE,EAAM,KAAK,EAC5B,OAAQpE,EAAUoE,EAAM,MAAM,CAC/B,CACF,CAAA,CAAC,EACIE,EAAQD,EAAS,IAAM,CAC3B,MAAMO,EAAS,CAAE,GAAGH,EAAM,MAAM,MAAO,gBAAiB,IACxD,OAAIL,EAAM,QACRQ,EAAO,MAAQvC,EAAM,MAAM,MAC3BuC,EAAO,OAASvC,EAAM,MAAM,QAEvBuC,CACb,CAAK,EACKC,EAAcR,EAAS,IAAM,CACjC,IAAIS,EAAeV,EAAM,YAIzB,GAHIU,IAAiB,KACnBA,EAAe,IAEb,CAACA,GAAgBJ,EAAkB,MACrC,MAAO,GAET,GAAI,OAAOI,GAAiB,SAC1B,OAAOA,EAET,MAAMpC,EAAO,MAAM,QAAQoC,CAAY,EAAIA,EAAe,OAAOA,GAAiB,SAAW,CAACA,EAAcA,CAAY,EAAI,CAAC,GAAI,EAAE,EACnI,OAAOtE,EAAK4D,EAAM,IAAK,CACrB,GAAGK,EAAM,UAAU,MACnB,MAAO/B,EAAK,CAAC,EACb,OAAQA,EAAK,CAAC,EACd,QAASA,EAAK,CAAC,GAAK,EAC5B,EAAS+B,EAAM,QAAQ,KAAK,CAC5B,CAAK,EACKM,EAAUV,EACd,IAAMD,EAAM,MAAQ/B,EAAM,MAAM,IAAM7B,EAAK4D,EAAM,IAAKK,EAAM,UAAU,MAAOA,EAAM,QAAQ,KAAK,CACtG,EACUpB,EAAMgB,EAAS,IAAMQ,EAAY,MAAQA,EAAY,MAAQE,EAAQ,KAAK,EAChF,GAAIX,EAAM,QAAS,CACjB,MAAMY,EAAe,OAAO,OAAO3C,EAAM,KAAK,EAAE,MAAOY,GAAMA,CAAC,EAC9DgC,EAAQ,CACN,KAAM,CAAC,CACL,IAAK,UACL,GAAI,QACJ,GAAID,EAAqC,CACvC,KAAM3C,EAAM,MAAM,IAClB,WAAYA,EAAM,MAAM,MACxB,YAAaA,EAAM,MAAM,MAC1B,EAJkB,CAAE,KAAMgB,EAAI,KAAK,CAK9C,CAAS,CACT,CAAO,EAKH,MAAM6B,EAAQP,IAERQ,EADUlB,IACY,YAC5B,OAAAmB,EAAU,IAAM,CACd,GAAIP,EAAY,MAAO,CACrB,MAAM5F,EAAM,IAAI,MAChBA,EAAI,IAAM8F,EAAQ,MAClB9F,EAAI,OAAUoG,GAAU,CAClBH,EAAM,QACRA,EAAM,MAAM,IAAMH,EAAQ,OAE5BL,EAAkB,MAAQ,GAC1BtE,EAAI,KAAK,OAAQiF,CAAK,CAChC,EACQ,OAEGH,EAAM,QAGPA,EAAM,MAAM,UAAYC,IACtBD,EAAM,MAAM,aAAa,YAAY,EACvC9E,EAAI,KAAK,QAAS,IAAI,MAAM,OAAO,CAAC,EAEpCA,EAAI,KAAK,OAAQ,IAAI,MAAM,MAAM,CAAC,GAGtC8E,EAAM,MAAM,OAAUG,GAAU,CAC9BjF,EAAI,KAAK,OAAQiF,CAAK,CAC9B,EACMH,EAAM,MAAM,QAAWG,GAAU,CAC/BjF,EAAI,KAAK,QAASiF,CAAK,CAC/B,EACA,CAAK,EACM,IAAMC,EAAE,MAAO,CACpB,IAAKJ,EACL,IAAK7B,EAAI,MACT,IAAKA,EAAI,MAET,GAAGiB,EAAM,MACT,GAAGlE,EAAI,KACb,CAAK,CACF,CACH,CAAC","x_google_ignoreList":[0,1,2,3,4,5,6,7]}