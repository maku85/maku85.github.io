__NUXT_JSONP__("/en", {data:[{socials:[{type:"linkedin",link:"https:\u002F\u002Fit.linkedin.com\u002Fin\u002Fmauro-cunsolo"},{type:"github",link:"https:\u002F\u002Fgithub.com\u002Fmaku85"},{type:"codepen",link:"https:\u002F\u002Fcodepen.io\u002Fmaku85\u002F"}],articles:[{slug:"node-design-pattern-proxy",description:"The proxy is a structural design pattern that allows you to provide a substitute in place of another object, acting as a filter and offering the possibility to perform operations before or after the request arrives at the original object.",title:"Structural Design Pattern - Proxy",img:"\u002Farticles\u002Fimages\u002Fdesign-pattern-proxy.jpeg",tags:"javascript, design-pattern, structural-pattern"},{slug:"node-design-pattern-factory",description:"The Factory is a creational design pattern that provides an interface to create objects while letting the subclasses decide which type of object to instantiate.",title:"Creational design patterns - Factory",img:"\u002Farticles\u002Fimages\u002Fdesign-pattern-factory.jpeg",tags:"javascript, design-pattern, creational-patterns"},{slug:"node-design-pattern-singleton",description:"The Singleton is a creational design pattern that allows you to ensure that a class has only one instance, while providing a global access point to it.",title:"Creational Design Patterns - Singleton",img:"\u002Farticles\u002Fimages\u002Fdesign-pattern-singleton.jpeg",tags:"javascript, design-pattern, creational-pattern"}]}],fetch:{},mutations:[]});