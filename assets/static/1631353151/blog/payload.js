__NUXT_JSONP__("/blog", {data:[{}],fetch:{"0":{filter:"",articles:[{slug:"node-design-pattern-proxy",description:"Il proxy è un design pattern strutturale che permette di fornire un sostituto al posto di un altro oggetto, fungendo da filtro e offrendo la possibilità di effettuare operazioni prima o dopo che la richiesta arrivi all'oggetto originale.",date:"2021-01-18T09:00:00.000Z",title:"Design Pattern Strutturale - Proxy",img:"\u002Farticles\u002Fimages\u002Fdesign-pattern-proxy.jpeg",tags:"javascript, design-pattern, structural-pattern"},{slug:"node-design-pattern-factory",description:"Il Factory è un design pattern creazionale che fornisce un'interfaccia per creare oggetti lasciando però che siano le sottoclassi a decidere quale tipo di oggetto istanziare.",date:"2021-01-11T09:00:00.000Z",title:"Design Pattern Creazionali - Factory",img:"\u002Farticles\u002Fimages\u002Fdesign-pattern-factory.jpeg",tags:"javascript, design-pattern, creational-patterns"},{slug:"node-design-pattern-singleton",description:"Il Singleton è un design pattern creazionale che consente di garantire che una classe abbia una sola istanza, fornendo al contempo un punto di accesso globale ad essa.",date:"2021-01-04T09:00:00.000Z",title:"Design Pattern Creazionali - Singleton",img:"\u002Farticles\u002Fimages\u002Fdesign-pattern-singleton.jpeg",tags:"javascript, design-pattern, creational-pattern"}]}},mutations:[]});